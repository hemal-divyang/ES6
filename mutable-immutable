//MUTABLE AND IMMUTABLE


// mutable means value can be changed
// immutable means value can not be changed



// primitives data types directly stores in location that the variable access(immutable - value can not be changed)
let x = 20;
let y = x;

y = y + 1;
console.log(x);
console.log(y);

// object and array are stores in variable location which is pointer location to memory(mutable - value can be changed)

let c = {
name:'hemal',
city:'bangalore'
}
let d = c;
d.age = 20;
console.log(c)//{name:'hemal',city:'bangalore',age:20}
console.log(d)//{name:'hemal',city:'bangalore',age:20}

* to solve this issue, use spread operators
let c = {
name:'hemal',
city:'bangalore'
}
let d = {...c};
d.age = 20;
console.log(c)//{name:'hemal',city:'bangalore'}
console.log(d)//{name:'hemal',city:'bangalore',age:20}
